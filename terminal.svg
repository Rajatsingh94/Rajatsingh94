<svg fill="none" viewBox="0 0 800 500" width="800" height="500" xmlns="http://www.w3.org/2000/svg">
  <foreignObject width="100%" height="100%">
    <div xmlns="http://www.w3.org/1999/xhtml">
      <style>
        @import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500&display=swap');
        
        .terminal-container {
          background: linear-gradient(135deg, #2b2922 0%, #1f1e1a 100%);
          padding: 16px;
          border-radius: 12px;
          box-shadow: 
            inset 0 0 40px rgba(0,0,0,0.5),
            0 0 60px rgba(251, 218, 97, 0.05);
        }
        
        .terminal {
          font-family: 'JetBrains Mono', 'Courier New', monospace;
          color: #d4cfc0;
          background: linear-gradient(180deg, #3a3832 0%, #2f2d28 100%);
          padding: 24px;
          border-radius: 8px;
          font-size: 16px;
          line-height: 1.5;
          border: 1px solid rgba(74, 71, 64, 0.3);
          box-shadow: 
            inset 0 0 50px rgba(0,0,0,0.3),
            0 0 30px rgba(251, 218, 97, 0.02);
          position: relative;
          overflow: hidden;
        }
        
        .terminal::before {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: repeating-linear-gradient(
            0deg,
            transparent,
            transparent 2px,
            rgba(251, 218, 97, 0.01) 2px,
            rgba(251, 218, 97, 0.01) 4px
          );
          pointer-events: none;
        }
        
        .terminal::after {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: radial-gradient(
            ellipse at center,
            transparent 0%,
            rgba(0,0,0,0.2) 100%
          );
          pointer-events: none;
        }
        
        .prompt { 
          color: #fbda61;
          font-weight: 500;
          text-shadow: 0 0 8px rgba(251, 218, 97, 0.4);
        }
        
        .command { 
          color: #e8d174;
          text-shadow: 0 0 3px rgba(232, 209, 116, 0.3);
        }
        
        .output { 
          color: #b8b3a0;
        }
        
        .highlight {
          color: #ffd93d;
          font-weight: 500;
          text-shadow: 0 0 5px rgba(255, 217, 61, 0.3);
        }
        
        .dim {
          color: #8a8475;
        }
        
        @keyframes typing {
          from { 
            width: 0;
            opacity: 0;
          }
          1% {
            opacity: 1;
          }
          to { 
            width: 100%;
            opacity: 1;
          }
        }
        
        @keyframes blink {
          0%, 49% { 
            opacity: 1;
            text-shadow: 0 0 10px rgba(251, 218, 97, 0.8);
          }
          50%, 100% { 
            opacity: 0;
          }
        }
        
        @keyframes flicker {
          0%, 100% { opacity: 1; }
          95% { opacity: 0.95; }
        }
        
        .line {
          overflow: hidden;
          white-space: nowrap;
          opacity: 0;
          animation: typing 1.5s steps(30, end) forwards;
          position: relative;
        }
        
        .cursor::after {
          content: "▮";
          position: absolute;
          animation: blink 1s infinite;
          color: #fbda61;
        }
        
        .line:nth-child(1) { animation-delay: 0.5s; }
        .line:nth-child(2) { animation-delay: 1.5s; }
        .line:nth-child(3) { animation-delay: 2s; }
        .line:nth-child(4) { animation-delay: 3s; }
        .line:nth-child(5) { animation-delay: 3.5s; }
        .line:nth-child(6) { animation-delay: 4.5s; }
        .line:nth-child(7) { animation-delay: 5.5s; }
        .line:nth-child(8) { animation-delay: 6.5s; }
        .line:nth-child(9) { animation-delay: 7.5s; }
        .line:nth-child(10) { animation-delay: 8.5s; }
        .line:nth-child(11) { animation-delay: 9.5s; }
        .line:nth-child(12) { animation-delay: 10.5s; }
        .line:nth-child(13) { animation-delay: 11.5s; }
        .line:nth-child(14) { animation-delay: 12.5s; }
        .line:nth-child(15) { animation-delay: 13.5s; }
        
        .header {
          color: #6b685c;
          font-size: 14px;
          margin-bottom: 12px;
          padding-bottom: 10px;
          border-bottom: 1px solid rgba(74, 71, 64, 0.3);
          font-family: 'JetBrains Mono', monospace;
          animation: flicker 3s infinite;
        }
        
        .header-dot {
          display: inline-block;
          width: 8px;
          height: 8px;
          background: #fbda61;
          border-radius: 50%;
          margin-right: 8px;
          box-shadow: 0 0 10px rgba(251, 218, 97, 0.6);
        }
      </style>
      
      <div class="terminal-container">
        <div class="terminal">
          <div class="header"><span class="header-dot"></span>RETRO-TERM v0.9.2 — /home/rajat</div>
          <div class="line"><span class="prompt">$</span> <span class="command">whoami</span></div>
          <div class="line"><span class="output">rajat</span></div>
          <div class="line"></div>
          <div class="line"><span class="prompt">$</span> <span class="command">hostnamectl</span> <span class="dim">| grep 'Operating System'</span></div>
          <div class="line"><span class="output">  Operating System: <span class="highlight">arch</span> <span class="dim">(custom dev setup)</span></span></div>
          <div class="line"></div>
          <div class="line"><span class="prompt">$</span> <span class="command">neofetch --off</span></div>
          <div class="line"><span class="output">Name: <span class="highlight">Rajat Singh</span></span></div>
          <div class="line"><span class="output">Focus: <span class="highlight">Generative AI</span> · <span class="highlight">RAG Systems</span> · <span class="highlight">Tool-Using Agents</span></span></div>
          <div class="line"><span class="output">Stack:</span></div>
          <div class="line"><span class="output">  <span class="dim">-</span> Languages: <span class="command">Python, TypeScript</span></span></div>
          <div class="line"><span class="output">  <span class="dim">-</span> Frameworks: <span class="command">FastAPI, LangChain, LlamaIndex</span></span></div>
          <div class="line"><span class="output">  <span class="dim">-</span> Infra: <span class="command">Docker, Postgres/pgvector, vLLM, AWS</span></span></div>
          <div class="line"><span class="output">Values: <span class="dim">clarity · reliability · iteration > perfection</span></span></div>
          <div class="line"><span class="output">Learning: <span class="dim">scalable evals + observability for LLM apps</span></span></div>
        </div>
      </div>
    </div>
  </foreignObject>
</svg>
